{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setReverse","goods","visibleGoods","sort","good1","good2","LENGTH","length","ALPHABETIC","localeCompare","reverse","getReorderedGoods","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,mBAAAA,I,4BAAAA,M,KAiCE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAiCH,oBAAS,GAA1C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EA1BD,SACLA,EADK,GAGJ,IADCJ,EACF,EADEA,SAAUE,EACZ,EADYA,WAENG,EAAY,YAAOD,GAezB,OAbAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQR,GACN,KAAKL,EAASc,OACZ,OAAOF,EAAMG,OAASF,EAAME,OAE9B,KAAKf,EAASgB,WACZ,OAAOJ,EAAMK,cAAcJ,GAE7B,QACE,OAAOb,EAASI,SAIfG,EAAaG,EAAaQ,UAAYR,EAO/BS,CAAkBlB,EAAiB,CAAEI,WAAUE,eAE7D,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IAAW,iBAAkB,CAC3B,WAAYjB,IAAaL,EAASgB,aAGtCO,QAAS,kBAAMjB,EAAYN,EAASgB,aAPtC,iCAYA,wBACEK,KAAK,SACLD,UACEE,IAAW,oBAAqB,CAC9B,WAAYjB,IAAaL,EAASc,SAGtCS,QAAS,kBAAMjB,EAAYN,EAASc,SAPtC,4BAYA,wBACEO,KAAK,SACLD,UACEE,IAAW,oBAAqB,CAC9B,YAAaf,IAGjBgB,QAAS,kBAAMf,GAAYD,IAP7B,sBAYEA,GAAcF,IAAaL,EAASI,OACpC,wBACEiB,KAAK,SACLD,UAAU,4BACVG,QAAS,iBAAM,CAACf,GAAW,GAAQF,EAAYN,EAASI,QAH1D,sBAUJ,6BACE,6BACGK,EAAMe,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,cC5GnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a17641af.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  LENGTH,\n  ALPHABETIC,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      case SortType.ALPHABETIC:\n        return good1.localeCompare(good2);\n\n      default:\n        return SortType.NONE;\n    }\n  });\n\n  return isReversed ? visibleGoods.reverse() : visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setReverse] = useState(false);\n\n  const goods = getReorderedGoods(goodsFromServer, { sortType, isReversed });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            classNames('button is-info', {\n              'is-light': sortType !== SortType.ALPHABETIC,\n            })\n          }\n          onClick={() => setSortType(SortType.ALPHABETIC)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            classNames('button is-success', {\n              'is-light': sortType !== SortType.LENGTH,\n            })\n          }\n          onClick={() => setSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            classNames('button is-warning', {\n              'is-light': !isReversed,\n            })\n          }\n          onClick={() => setReverse(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(isReversed || sortType !== SortType.NONE) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => [setReverse(false), setSortType(SortType.NONE)]}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {goods.map(good => (\n            <li\n              key={good}\n              data-cy=\"Good\"\n            >\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}